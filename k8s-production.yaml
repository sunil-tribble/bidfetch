apiVersion: v1
kind: Namespace
metadata:
  name: bidfetch
  labels:
    name: bidfetch
---
apiVersion: v1
kind: Secret
metadata:
  name: bidfetch-secrets
  namespace: bidfetch
type: Opaque
data:
  # These will be populated by the deployment script
  DATABASE_URL: ""
  REDIS_URL: ""
  S3_ENDPOINT: ""
  S3_BUCKET: ""
  S3_ACCESS_KEY: ""
  S3_SECRET_KEY: ""
  SAM_GOV_API_KEY: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bidfetch-config
  namespace: bidfetch
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  API_PORT: "3000"
  WORKER_CONCURRENCY: "5"
  SAM_GOV_RATE_LIMIT: "1500"
  SAM_GOV_RATE_WINDOW: "3600000"
  SAM_GOV_POLL_INTERVAL: "900000"
  FPDS_POLL_INTERVAL: "3600000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bidfetch-api
  namespace: bidfetch
  labels:
    app: bidfetch-api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bidfetch-api
  template:
    metadata:
      labels:
        app: bidfetch-api
    spec:
      containers:
      - name: api
        image: registry.digitalocean.com/bidfetch-registry/bidfetch-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: bidfetch-config
              key: NODE_ENV
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: bidfetch-config
              key: API_PORT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: REDIS_URL
        - name: S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: S3_ENDPOINT
        - name: S3_BUCKET
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: S3_BUCKET
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: S3_SECRET_KEY
        - name: SAM_GOV_API_KEY
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: SAM_GOV_API_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bidfetch-frontend
  namespace: bidfetch
  labels:
    app: bidfetch-frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bidfetch-frontend
  template:
    metadata:
      labels:
        app: bidfetch-frontend
    spec:
      containers:
      - name: frontend
        image: registry.digitalocean.com/bidfetch-registry/bidfetch-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bidfetch-worker
  namespace: bidfetch
  labels:
    app: bidfetch-worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bidfetch-worker
  template:
    metadata:
      labels:
        app: bidfetch-worker
    spec:
      containers:
      - name: worker
        image: registry.digitalocean.com/bidfetch-registry/bidfetch-api:latest
        imagePullPolicy: Always
        command: ["node", "dist/workers/index.js"]
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: bidfetch-config
              key: NODE_ENV
        - name: WORKER_CONCURRENCY
          valueFrom:
            configMapKeyRef:
              name: bidfetch-config
              key: WORKER_CONCURRENCY
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: REDIS_URL
        - name: S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: S3_ENDPOINT
        - name: S3_BUCKET
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: S3_BUCKET
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: S3_SECRET_KEY
        - name: SAM_GOV_API_KEY
          valueFrom:
            secretKeyRef:
              name: bidfetch-secrets
              key: SAM_GOV_API_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
---
apiVersion: v1
kind: Service
metadata:
  name: bidfetch-api-service
  namespace: bidfetch
  labels:
    app: bidfetch-api
spec:
  selector:
    app: bidfetch-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: bidfetch-frontend-service
  namespace: bidfetch
  labels:
    app: bidfetch-frontend
spec:
  selector:
    app: bidfetch-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: bidfetch-sam-ingester
  namespace: bidfetch
spec:
  schedule: "*/15 * * * *"  # Every 15 minutes
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: sam-ingester
            image: registry.digitalocean.com/bidfetch-registry/bidfetch-api:latest
            command: ["node", "dist/services/sources/sam-gov/index.js"]
            env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: bidfetch-config
                  key: NODE_ENV
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: bidfetch-secrets
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: bidfetch-secrets
                  key: REDIS_URL
            - name: SAM_GOV_API_KEY
              valueFrom:
                secretKeyRef:
                  name: bidfetch-secrets
                  key: SAM_GOV_API_KEY
            resources:
              requests:
                memory: "256Mi"
                cpu: "200m"
              limits:
                memory: "512Mi"
                cpu: "400m"
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: bidfetch-grants-ingester
  namespace: bidfetch
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: grants-ingester
            image: registry.digitalocean.com/bidfetch-registry/bidfetch-api:latest
            command: ["node", "dist/services/sources/grants-gov/index.js"]
            env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: bidfetch-config
                  key: NODE_ENV
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: bidfetch-secrets
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: bidfetch-secrets
                  key: REDIS_URL
            resources:
              requests:
                memory: "256Mi"
                cpu: "200m"
              limits:
                memory: "512Mi"
                cpu: "400m"
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: bidfetch-fpds-ingester
  namespace: bidfetch
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: fpds-ingester
            image: registry.digitalocean.com/bidfetch-registry/bidfetch-api:latest
            command: ["node", "dist/services/sources/fpds/index.js"]
            env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: bidfetch-config
                  key: NODE_ENV
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: bidfetch-secrets
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: bidfetch-secrets
                  key: REDIS_URL
            resources:
              requests:
                memory: "256Mi"
                cpu: "200m"
              limits:
                memory: "512Mi"
                cpu: "400m"
          restartPolicy: OnFailure
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bidfetch-api-hpa
  namespace: bidfetch
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bidfetch-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bidfetch-frontend-hpa
  namespace: bidfetch
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bidfetch-frontend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70